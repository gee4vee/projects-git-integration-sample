# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    # types: [ "closed" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # --data '{ "definition": $gitConfigDefinition }' \

      - name: get token
        run: |
          IAM_TOKEN=$(curl -X POST "https://iam.cloud.ibm.com/identity/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -H "Accept: application/json" \
          -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=${{ secrets.IBM_CLOUD_API_KEY }}" | jq -r .access_token)

      - name: check which configs were updated
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --name-only HEAD^ HEAD

      - name: print JSON contents
        run: |
          gitConfigDefinition=$(jq '.definition' configs/git-config.json)

          PROJECT_ID='362d3a4f-0ce9-490c-9629-77b97a3d72ad'
          CONFIG_ID='036374b9-cf53-4292-af7c-3688fa502ca3'
          BASE_URL='https://projects-dev.api.test.cloud.ibm.com'

          RESPONSE=$(curl -X PATCH --location --header "Authorization: Bearer ${IAM_TOKEN}" \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --data '{ definition: { "authorizations": {}, "labels": [], "inputs": { "region": "us-south" }, "compliance_profile": {}, "members": [], "uses": [], "name": "git-config", "locator_id": "1082e7d2-5e2f-0a11-a3bc-f88a8e1931fc.3ba7b7ba-cef3-4511-bf76-8652a1961a08-global", "description": "" } }' \
          "${BASE_URL}/v1/projects/${PROJECT_ID}/configs/${CONFIG_ID}")

          echo $RESPONSE
